"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyInputTypesEnhanceMap = exports.applyOutputTypesEnhanceMap = exports.applyModelsEnhanceMap = exports.applyArgsTypesEnhanceMap = exports.applyResolversEnhanceMap = void 0;
const tslib_1 = require("tslib");
const tslib = tslib_1.__importStar(require("tslib"));
const crudResolvers = tslib_1.__importStar(require("./resolvers/crud/resolvers-crud.index"));
const argsTypes = tslib_1.__importStar(require("./resolvers/crud/args.index"));
const actionResolvers = tslib_1.__importStar(require("./resolvers/crud/resolvers-actions.index"));
const models = tslib_1.__importStar(require("./models"));
const outputTypes = tslib_1.__importStar(require("./resolvers/outputs"));
const inputTypes = tslib_1.__importStar(require("./resolvers/inputs"));
const crudResolversMap = {
    Apitoken: crudResolvers.ApitokenCrudResolver,
    Payments: crudResolvers.PaymentsCrudResolver,
    Templates: crudResolvers.TemplatesCrudResolver,
    Emails: crudResolvers.EmailsCrudResolver,
    Taxes: crudResolvers.TaxesCrudResolver,
    Categories: crudResolvers.CategoriesCrudResolver,
    Customers: crudResolvers.CustomersCrudResolver,
    Integrations: crudResolvers.IntegrationsCrudResolver,
    Internalization: crudResolvers.InternalizationCrudResolver,
    Mediamanager: crudResolvers.MediamanagerCrudResolver,
    Permissions: crudResolvers.PermissionsCrudResolver,
    Plugins: crudResolvers.PluginsCrudResolver,
    Providers: crudResolvers.ProvidersCrudResolver,
    Roles: crudResolvers.RolesCrudResolver,
    Tags: crudResolvers.TagsCrudResolver,
    Users: crudResolvers.UsersCrudResolver,
    Webhooks: crudResolvers.WebhooksCrudResolver,
    Settings: crudResolvers.SettingsCrudResolver
};
const actionResolversMap = {
    Apitoken: {
        aggregateApitoken: actionResolvers.AggregateApitokenResolver,
        createManyApitoken: actionResolvers.CreateManyApitokenResolver,
        createOneApitoken: actionResolvers.CreateOneApitokenResolver,
        deleteManyApitoken: actionResolvers.DeleteManyApitokenResolver,
        deleteOneApitoken: actionResolvers.DeleteOneApitokenResolver,
        findFirstApitoken: actionResolvers.FindFirstApitokenResolver,
        findFirstApitokenOrThrow: actionResolvers.FindFirstApitokenOrThrowResolver,
        apitokens: actionResolvers.FindManyApitokenResolver,
        apitoken: actionResolvers.FindUniqueApitokenResolver,
        getApitoken: actionResolvers.FindUniqueApitokenOrThrowResolver,
        groupByApitoken: actionResolvers.GroupByApitokenResolver,
        updateManyApitoken: actionResolvers.UpdateManyApitokenResolver,
        updateOneApitoken: actionResolvers.UpdateOneApitokenResolver,
        upsertOneApitoken: actionResolvers.UpsertOneApitokenResolver
    },
    Payments: {
        aggregatePayments: actionResolvers.AggregatePaymentsResolver,
        createManyPayments: actionResolvers.CreateManyPaymentsResolver,
        createOnePayments: actionResolvers.CreateOnePaymentsResolver,
        deleteManyPayments: actionResolvers.DeleteManyPaymentsResolver,
        deleteOnePayments: actionResolvers.DeleteOnePaymentsResolver,
        findFirstPayments: actionResolvers.FindFirstPaymentsResolver,
        findFirstPaymentsOrThrow: actionResolvers.FindFirstPaymentsOrThrowResolver,
        findManyPayments: actionResolvers.FindManyPaymentsResolver,
        findUniquePayments: actionResolvers.FindUniquePaymentsResolver,
        findUniquePaymentsOrThrow: actionResolvers.FindUniquePaymentsOrThrowResolver,
        groupByPayments: actionResolvers.GroupByPaymentsResolver,
        updateManyPayments: actionResolvers.UpdateManyPaymentsResolver,
        updateOnePayments: actionResolvers.UpdateOnePaymentsResolver,
        upsertOnePayments: actionResolvers.UpsertOnePaymentsResolver
    },
    Templates: {
        aggregateTemplates: actionResolvers.AggregateTemplatesResolver,
        createManyTemplates: actionResolvers.CreateManyTemplatesResolver,
        createOneTemplates: actionResolvers.CreateOneTemplatesResolver,
        deleteManyTemplates: actionResolvers.DeleteManyTemplatesResolver,
        deleteOneTemplates: actionResolvers.DeleteOneTemplatesResolver,
        findFirstTemplates: actionResolvers.FindFirstTemplatesResolver,
        findFirstTemplatesOrThrow: actionResolvers.FindFirstTemplatesOrThrowResolver,
        findManyTemplates: actionResolvers.FindManyTemplatesResolver,
        findUniqueTemplates: actionResolvers.FindUniqueTemplatesResolver,
        findUniqueTemplatesOrThrow: actionResolvers.FindUniqueTemplatesOrThrowResolver,
        groupByTemplates: actionResolvers.GroupByTemplatesResolver,
        updateManyTemplates: actionResolvers.UpdateManyTemplatesResolver,
        updateOneTemplates: actionResolvers.UpdateOneTemplatesResolver,
        upsertOneTemplates: actionResolvers.UpsertOneTemplatesResolver
    },
    Emails: {
        aggregateEmails: actionResolvers.AggregateEmailsResolver,
        createManyEmails: actionResolvers.CreateManyEmailsResolver,
        createOneEmails: actionResolvers.CreateOneEmailsResolver,
        deleteManyEmails: actionResolvers.DeleteManyEmailsResolver,
        deleteOneEmails: actionResolvers.DeleteOneEmailsResolver,
        findFirstEmails: actionResolvers.FindFirstEmailsResolver,
        findFirstEmailsOrThrow: actionResolvers.FindFirstEmailsOrThrowResolver,
        findManyEmails: actionResolvers.FindManyEmailsResolver,
        findUniqueEmails: actionResolvers.FindUniqueEmailsResolver,
        findUniqueEmailsOrThrow: actionResolvers.FindUniqueEmailsOrThrowResolver,
        groupByEmails: actionResolvers.GroupByEmailsResolver,
        updateManyEmails: actionResolvers.UpdateManyEmailsResolver,
        updateOneEmails: actionResolvers.UpdateOneEmailsResolver,
        upsertOneEmails: actionResolvers.UpsertOneEmailsResolver
    },
    Taxes: {
        aggregateTaxes: actionResolvers.AggregateTaxesResolver,
        createManyTaxes: actionResolvers.CreateManyTaxesResolver,
        createOneTaxes: actionResolvers.CreateOneTaxesResolver,
        deleteManyTaxes: actionResolvers.DeleteManyTaxesResolver,
        deleteOneTaxes: actionResolvers.DeleteOneTaxesResolver,
        findFirstTaxes: actionResolvers.FindFirstTaxesResolver,
        findFirstTaxesOrThrow: actionResolvers.FindFirstTaxesOrThrowResolver,
        findManyTaxes: actionResolvers.FindManyTaxesResolver,
        findUniqueTaxes: actionResolvers.FindUniqueTaxesResolver,
        findUniqueTaxesOrThrow: actionResolvers.FindUniqueTaxesOrThrowResolver,
        groupByTaxes: actionResolvers.GroupByTaxesResolver,
        updateManyTaxes: actionResolvers.UpdateManyTaxesResolver,
        updateOneTaxes: actionResolvers.UpdateOneTaxesResolver,
        upsertOneTaxes: actionResolvers.UpsertOneTaxesResolver
    },
    Categories: {
        aggregateCategories: actionResolvers.AggregateCategoriesResolver,
        createManyCategories: actionResolvers.CreateManyCategoriesResolver,
        createOneCategories: actionResolvers.CreateOneCategoriesResolver,
        deleteManyCategories: actionResolvers.DeleteManyCategoriesResolver,
        deleteOneCategories: actionResolvers.DeleteOneCategoriesResolver,
        findFirstCategories: actionResolvers.FindFirstCategoriesResolver,
        findFirstCategoriesOrThrow: actionResolvers.FindFirstCategoriesOrThrowResolver,
        findManyCategories: actionResolvers.FindManyCategoriesResolver,
        findUniqueCategories: actionResolvers.FindUniqueCategoriesResolver,
        findUniqueCategoriesOrThrow: actionResolvers.FindUniqueCategoriesOrThrowResolver,
        groupByCategories: actionResolvers.GroupByCategoriesResolver,
        updateManyCategories: actionResolvers.UpdateManyCategoriesResolver,
        updateOneCategories: actionResolvers.UpdateOneCategoriesResolver,
        upsertOneCategories: actionResolvers.UpsertOneCategoriesResolver
    },
    Customers: {
        aggregateCustomers: actionResolvers.AggregateCustomersResolver,
        createManyCustomers: actionResolvers.CreateManyCustomersResolver,
        createOneCustomers: actionResolvers.CreateOneCustomersResolver,
        deleteManyCustomers: actionResolvers.DeleteManyCustomersResolver,
        deleteOneCustomers: actionResolvers.DeleteOneCustomersResolver,
        findFirstCustomers: actionResolvers.FindFirstCustomersResolver,
        findFirstCustomersOrThrow: actionResolvers.FindFirstCustomersOrThrowResolver,
        findManyCustomers: actionResolvers.FindManyCustomersResolver,
        findUniqueCustomers: actionResolvers.FindUniqueCustomersResolver,
        findUniqueCustomersOrThrow: actionResolvers.FindUniqueCustomersOrThrowResolver,
        groupByCustomers: actionResolvers.GroupByCustomersResolver,
        updateManyCustomers: actionResolvers.UpdateManyCustomersResolver,
        updateOneCustomers: actionResolvers.UpdateOneCustomersResolver,
        upsertOneCustomers: actionResolvers.UpsertOneCustomersResolver
    },
    Integrations: {
        aggregateIntegrations: actionResolvers.AggregateIntegrationsResolver,
        createManyIntegrations: actionResolvers.CreateManyIntegrationsResolver,
        createOneIntegrations: actionResolvers.CreateOneIntegrationsResolver,
        deleteManyIntegrations: actionResolvers.DeleteManyIntegrationsResolver,
        deleteOneIntegrations: actionResolvers.DeleteOneIntegrationsResolver,
        findFirstIntegrations: actionResolvers.FindFirstIntegrationsResolver,
        findFirstIntegrationsOrThrow: actionResolvers.FindFirstIntegrationsOrThrowResolver,
        findManyIntegrations: actionResolvers.FindManyIntegrationsResolver,
        findUniqueIntegrations: actionResolvers.FindUniqueIntegrationsResolver,
        findUniqueIntegrationsOrThrow: actionResolvers.FindUniqueIntegrationsOrThrowResolver,
        groupByIntegrations: actionResolvers.GroupByIntegrationsResolver,
        updateManyIntegrations: actionResolvers.UpdateManyIntegrationsResolver,
        updateOneIntegrations: actionResolvers.UpdateOneIntegrationsResolver,
        upsertOneIntegrations: actionResolvers.UpsertOneIntegrationsResolver
    },
    Internalization: {
        aggregateInternalization: actionResolvers.AggregateInternalizationResolver,
        createManyInternalization: actionResolvers.CreateManyInternalizationResolver,
        createOneInternalization: actionResolvers.CreateOneInternalizationResolver,
        deleteManyInternalization: actionResolvers.DeleteManyInternalizationResolver,
        deleteOneInternalization: actionResolvers.DeleteOneInternalizationResolver,
        findFirstInternalization: actionResolvers.FindFirstInternalizationResolver,
        findFirstInternalizationOrThrow: actionResolvers.FindFirstInternalizationOrThrowResolver,
        internalizations: actionResolvers.FindManyInternalizationResolver,
        internalization: actionResolvers.FindUniqueInternalizationResolver,
        getInternalization: actionResolvers.FindUniqueInternalizationOrThrowResolver,
        groupByInternalization: actionResolvers.GroupByInternalizationResolver,
        updateManyInternalization: actionResolvers.UpdateManyInternalizationResolver,
        updateOneInternalization: actionResolvers.UpdateOneInternalizationResolver,
        upsertOneInternalization: actionResolvers.UpsertOneInternalizationResolver
    },
    Mediamanager: {
        aggregateMediamanager: actionResolvers.AggregateMediamanagerResolver,
        createManyMediamanager: actionResolvers.CreateManyMediamanagerResolver,
        createOneMediamanager: actionResolvers.CreateOneMediamanagerResolver,
        deleteManyMediamanager: actionResolvers.DeleteManyMediamanagerResolver,
        deleteOneMediamanager: actionResolvers.DeleteOneMediamanagerResolver,
        findFirstMediamanager: actionResolvers.FindFirstMediamanagerResolver,
        findFirstMediamanagerOrThrow: actionResolvers.FindFirstMediamanagerOrThrowResolver,
        mediamanagers: actionResolvers.FindManyMediamanagerResolver,
        mediamanager: actionResolvers.FindUniqueMediamanagerResolver,
        getMediamanager: actionResolvers.FindUniqueMediamanagerOrThrowResolver,
        groupByMediamanager: actionResolvers.GroupByMediamanagerResolver,
        updateManyMediamanager: actionResolvers.UpdateManyMediamanagerResolver,
        updateOneMediamanager: actionResolvers.UpdateOneMediamanagerResolver,
        upsertOneMediamanager: actionResolvers.UpsertOneMediamanagerResolver
    },
    Permissions: {
        aggregatePermissions: actionResolvers.AggregatePermissionsResolver,
        createManyPermissions: actionResolvers.CreateManyPermissionsResolver,
        createOnePermissions: actionResolvers.CreateOnePermissionsResolver,
        deleteManyPermissions: actionResolvers.DeleteManyPermissionsResolver,
        deleteOnePermissions: actionResolvers.DeleteOnePermissionsResolver,
        findFirstPermissions: actionResolvers.FindFirstPermissionsResolver,
        findFirstPermissionsOrThrow: actionResolvers.FindFirstPermissionsOrThrowResolver,
        findManyPermissions: actionResolvers.FindManyPermissionsResolver,
        findUniquePermissions: actionResolvers.FindUniquePermissionsResolver,
        findUniquePermissionsOrThrow: actionResolvers.FindUniquePermissionsOrThrowResolver,
        groupByPermissions: actionResolvers.GroupByPermissionsResolver,
        updateManyPermissions: actionResolvers.UpdateManyPermissionsResolver,
        updateOnePermissions: actionResolvers.UpdateOnePermissionsResolver,
        upsertOnePermissions: actionResolvers.UpsertOnePermissionsResolver
    },
    Plugins: {
        aggregatePlugins: actionResolvers.AggregatePluginsResolver,
        createManyPlugins: actionResolvers.CreateManyPluginsResolver,
        createOnePlugins: actionResolvers.CreateOnePluginsResolver,
        deleteManyPlugins: actionResolvers.DeleteManyPluginsResolver,
        deleteOnePlugins: actionResolvers.DeleteOnePluginsResolver,
        findFirstPlugins: actionResolvers.FindFirstPluginsResolver,
        findFirstPluginsOrThrow: actionResolvers.FindFirstPluginsOrThrowResolver,
        findManyPlugins: actionResolvers.FindManyPluginsResolver,
        findUniquePlugins: actionResolvers.FindUniquePluginsResolver,
        findUniquePluginsOrThrow: actionResolvers.FindUniquePluginsOrThrowResolver,
        groupByPlugins: actionResolvers.GroupByPluginsResolver,
        updateManyPlugins: actionResolvers.UpdateManyPluginsResolver,
        updateOnePlugins: actionResolvers.UpdateOnePluginsResolver,
        upsertOnePlugins: actionResolvers.UpsertOnePluginsResolver
    },
    Providers: {
        aggregateProviders: actionResolvers.AggregateProvidersResolver,
        createManyProviders: actionResolvers.CreateManyProvidersResolver,
        createOneProviders: actionResolvers.CreateOneProvidersResolver,
        deleteManyProviders: actionResolvers.DeleteManyProvidersResolver,
        deleteOneProviders: actionResolvers.DeleteOneProvidersResolver,
        findFirstProviders: actionResolvers.FindFirstProvidersResolver,
        findFirstProvidersOrThrow: actionResolvers.FindFirstProvidersOrThrowResolver,
        findManyProviders: actionResolvers.FindManyProvidersResolver,
        findUniqueProviders: actionResolvers.FindUniqueProvidersResolver,
        findUniqueProvidersOrThrow: actionResolvers.FindUniqueProvidersOrThrowResolver,
        groupByProviders: actionResolvers.GroupByProvidersResolver,
        updateManyProviders: actionResolvers.UpdateManyProvidersResolver,
        updateOneProviders: actionResolvers.UpdateOneProvidersResolver,
        upsertOneProviders: actionResolvers.UpsertOneProvidersResolver
    },
    Roles: {
        aggregateRoles: actionResolvers.AggregateRolesResolver,
        createManyRoles: actionResolvers.CreateManyRolesResolver,
        createOneRoles: actionResolvers.CreateOneRolesResolver,
        deleteManyRoles: actionResolvers.DeleteManyRolesResolver,
        deleteOneRoles: actionResolvers.DeleteOneRolesResolver,
        findFirstRoles: actionResolvers.FindFirstRolesResolver,
        findFirstRolesOrThrow: actionResolvers.FindFirstRolesOrThrowResolver,
        findManyRoles: actionResolvers.FindManyRolesResolver,
        findUniqueRoles: actionResolvers.FindUniqueRolesResolver,
        findUniqueRolesOrThrow: actionResolvers.FindUniqueRolesOrThrowResolver,
        groupByRoles: actionResolvers.GroupByRolesResolver,
        updateManyRoles: actionResolvers.UpdateManyRolesResolver,
        updateOneRoles: actionResolvers.UpdateOneRolesResolver,
        upsertOneRoles: actionResolvers.UpsertOneRolesResolver
    },
    Tags: {
        aggregateTags: actionResolvers.AggregateTagsResolver,
        createManyTags: actionResolvers.CreateManyTagsResolver,
        createOneTags: actionResolvers.CreateOneTagsResolver,
        deleteManyTags: actionResolvers.DeleteManyTagsResolver,
        deleteOneTags: actionResolvers.DeleteOneTagsResolver,
        findFirstTags: actionResolvers.FindFirstTagsResolver,
        findFirstTagsOrThrow: actionResolvers.FindFirstTagsOrThrowResolver,
        findManyTags: actionResolvers.FindManyTagsResolver,
        findUniqueTags: actionResolvers.FindUniqueTagsResolver,
        findUniqueTagsOrThrow: actionResolvers.FindUniqueTagsOrThrowResolver,
        groupByTags: actionResolvers.GroupByTagsResolver,
        updateManyTags: actionResolvers.UpdateManyTagsResolver,
        updateOneTags: actionResolvers.UpdateOneTagsResolver,
        upsertOneTags: actionResolvers.UpsertOneTagsResolver
    },
    Users: {
        aggregateUsers: actionResolvers.AggregateUsersResolver,
        createManyUsers: actionResolvers.CreateManyUsersResolver,
        createOneUsers: actionResolvers.CreateOneUsersResolver,
        deleteManyUsers: actionResolvers.DeleteManyUsersResolver,
        deleteOneUsers: actionResolvers.DeleteOneUsersResolver,
        findFirstUsers: actionResolvers.FindFirstUsersResolver,
        findFirstUsersOrThrow: actionResolvers.FindFirstUsersOrThrowResolver,
        findManyUsers: actionResolvers.FindManyUsersResolver,
        findUniqueUsers: actionResolvers.FindUniqueUsersResolver,
        findUniqueUsersOrThrow: actionResolvers.FindUniqueUsersOrThrowResolver,
        groupByUsers: actionResolvers.GroupByUsersResolver,
        updateManyUsers: actionResolvers.UpdateManyUsersResolver,
        updateOneUsers: actionResolvers.UpdateOneUsersResolver,
        upsertOneUsers: actionResolvers.UpsertOneUsersResolver
    },
    Webhooks: {
        aggregateWebhooks: actionResolvers.AggregateWebhooksResolver,
        createManyWebhooks: actionResolvers.CreateManyWebhooksResolver,
        createOneWebhooks: actionResolvers.CreateOneWebhooksResolver,
        deleteManyWebhooks: actionResolvers.DeleteManyWebhooksResolver,
        deleteOneWebhooks: actionResolvers.DeleteOneWebhooksResolver,
        findFirstWebhooks: actionResolvers.FindFirstWebhooksResolver,
        findFirstWebhooksOrThrow: actionResolvers.FindFirstWebhooksOrThrowResolver,
        findManyWebhooks: actionResolvers.FindManyWebhooksResolver,
        findUniqueWebhooks: actionResolvers.FindUniqueWebhooksResolver,
        findUniqueWebhooksOrThrow: actionResolvers.FindUniqueWebhooksOrThrowResolver,
        groupByWebhooks: actionResolvers.GroupByWebhooksResolver,
        updateManyWebhooks: actionResolvers.UpdateManyWebhooksResolver,
        updateOneWebhooks: actionResolvers.UpdateOneWebhooksResolver,
        upsertOneWebhooks: actionResolvers.UpsertOneWebhooksResolver
    },
    Settings: {
        aggregateSettings: actionResolvers.AggregateSettingsResolver,
        createManySettings: actionResolvers.CreateManySettingsResolver,
        createOneSettings: actionResolvers.CreateOneSettingsResolver,
        deleteManySettings: actionResolvers.DeleteManySettingsResolver,
        deleteOneSettings: actionResolvers.DeleteOneSettingsResolver,
        findFirstSettings: actionResolvers.FindFirstSettingsResolver,
        findFirstSettingsOrThrow: actionResolvers.FindFirstSettingsOrThrowResolver,
        findManySettings: actionResolvers.FindManySettingsResolver,
        findUniqueSettings: actionResolvers.FindUniqueSettingsResolver,
        findUniqueSettingsOrThrow: actionResolvers.FindUniqueSettingsOrThrowResolver,
        groupBySettings: actionResolvers.GroupBySettingsResolver,
        updateManySettings: actionResolvers.UpdateManySettingsResolver,
        updateOneSettings: actionResolvers.UpdateOneSettingsResolver,
        upsertOneSettings: actionResolvers.UpsertOneSettingsResolver
    }
};
const crudResolversInfo = {
    Apitoken: ["aggregateApitoken", "createManyApitoken", "createOneApitoken", "deleteManyApitoken", "deleteOneApitoken", "findFirstApitoken", "findFirstApitokenOrThrow", "apitokens", "apitoken", "getApitoken", "groupByApitoken", "updateManyApitoken", "updateOneApitoken", "upsertOneApitoken"],
    Payments: ["aggregatePayments", "createManyPayments", "createOnePayments", "deleteManyPayments", "deleteOnePayments", "findFirstPayments", "findFirstPaymentsOrThrow", "findManyPayments", "findUniquePayments", "findUniquePaymentsOrThrow", "groupByPayments", "updateManyPayments", "updateOnePayments", "upsertOnePayments"],
    Templates: ["aggregateTemplates", "createManyTemplates", "createOneTemplates", "deleteManyTemplates", "deleteOneTemplates", "findFirstTemplates", "findFirstTemplatesOrThrow", "findManyTemplates", "findUniqueTemplates", "findUniqueTemplatesOrThrow", "groupByTemplates", "updateManyTemplates", "updateOneTemplates", "upsertOneTemplates"],
    Emails: ["aggregateEmails", "createManyEmails", "createOneEmails", "deleteManyEmails", "deleteOneEmails", "findFirstEmails", "findFirstEmailsOrThrow", "findManyEmails", "findUniqueEmails", "findUniqueEmailsOrThrow", "groupByEmails", "updateManyEmails", "updateOneEmails", "upsertOneEmails"],
    Taxes: ["aggregateTaxes", "createManyTaxes", "createOneTaxes", "deleteManyTaxes", "deleteOneTaxes", "findFirstTaxes", "findFirstTaxesOrThrow", "findManyTaxes", "findUniqueTaxes", "findUniqueTaxesOrThrow", "groupByTaxes", "updateManyTaxes", "updateOneTaxes", "upsertOneTaxes"],
    Categories: ["aggregateCategories", "createManyCategories", "createOneCategories", "deleteManyCategories", "deleteOneCategories", "findFirstCategories", "findFirstCategoriesOrThrow", "findManyCategories", "findUniqueCategories", "findUniqueCategoriesOrThrow", "groupByCategories", "updateManyCategories", "updateOneCategories", "upsertOneCategories"],
    Customers: ["aggregateCustomers", "createManyCustomers", "createOneCustomers", "deleteManyCustomers", "deleteOneCustomers", "findFirstCustomers", "findFirstCustomersOrThrow", "findManyCustomers", "findUniqueCustomers", "findUniqueCustomersOrThrow", "groupByCustomers", "updateManyCustomers", "updateOneCustomers", "upsertOneCustomers"],
    Integrations: ["aggregateIntegrations", "createManyIntegrations", "createOneIntegrations", "deleteManyIntegrations", "deleteOneIntegrations", "findFirstIntegrations", "findFirstIntegrationsOrThrow", "findManyIntegrations", "findUniqueIntegrations", "findUniqueIntegrationsOrThrow", "groupByIntegrations", "updateManyIntegrations", "updateOneIntegrations", "upsertOneIntegrations"],
    Internalization: ["aggregateInternalization", "createManyInternalization", "createOneInternalization", "deleteManyInternalization", "deleteOneInternalization", "findFirstInternalization", "findFirstInternalizationOrThrow", "internalizations", "internalization", "getInternalization", "groupByInternalization", "updateManyInternalization", "updateOneInternalization", "upsertOneInternalization"],
    Mediamanager: ["aggregateMediamanager", "createManyMediamanager", "createOneMediamanager", "deleteManyMediamanager", "deleteOneMediamanager", "findFirstMediamanager", "findFirstMediamanagerOrThrow", "mediamanagers", "mediamanager", "getMediamanager", "groupByMediamanager", "updateManyMediamanager", "updateOneMediamanager", "upsertOneMediamanager"],
    Permissions: ["aggregatePermissions", "createManyPermissions", "createOnePermissions", "deleteManyPermissions", "deleteOnePermissions", "findFirstPermissions", "findFirstPermissionsOrThrow", "findManyPermissions", "findUniquePermissions", "findUniquePermissionsOrThrow", "groupByPermissions", "updateManyPermissions", "updateOnePermissions", "upsertOnePermissions"],
    Plugins: ["aggregatePlugins", "createManyPlugins", "createOnePlugins", "deleteManyPlugins", "deleteOnePlugins", "findFirstPlugins", "findFirstPluginsOrThrow", "findManyPlugins", "findUniquePlugins", "findUniquePluginsOrThrow", "groupByPlugins", "updateManyPlugins", "updateOnePlugins", "upsertOnePlugins"],
    Providers: ["aggregateProviders", "createManyProviders", "createOneProviders", "deleteManyProviders", "deleteOneProviders", "findFirstProviders", "findFirstProvidersOrThrow", "findManyProviders", "findUniqueProviders", "findUniqueProvidersOrThrow", "groupByProviders", "updateManyProviders", "updateOneProviders", "upsertOneProviders"],
    Roles: ["aggregateRoles", "createManyRoles", "createOneRoles", "deleteManyRoles", "deleteOneRoles", "findFirstRoles", "findFirstRolesOrThrow", "findManyRoles", "findUniqueRoles", "findUniqueRolesOrThrow", "groupByRoles", "updateManyRoles", "updateOneRoles", "upsertOneRoles"],
    Tags: ["aggregateTags", "createManyTags", "createOneTags", "deleteManyTags", "deleteOneTags", "findFirstTags", "findFirstTagsOrThrow", "findManyTags", "findUniqueTags", "findUniqueTagsOrThrow", "groupByTags", "updateManyTags", "updateOneTags", "upsertOneTags"],
    Users: ["aggregateUsers", "createManyUsers", "createOneUsers", "deleteManyUsers", "deleteOneUsers", "findFirstUsers", "findFirstUsersOrThrow", "findManyUsers", "findUniqueUsers", "findUniqueUsersOrThrow", "groupByUsers", "updateManyUsers", "updateOneUsers", "upsertOneUsers"],
    Webhooks: ["aggregateWebhooks", "createManyWebhooks", "createOneWebhooks", "deleteManyWebhooks", "deleteOneWebhooks", "findFirstWebhooks", "findFirstWebhooksOrThrow", "findManyWebhooks", "findUniqueWebhooks", "findUniqueWebhooksOrThrow", "groupByWebhooks", "updateManyWebhooks", "updateOneWebhooks", "upsertOneWebhooks"],
    Settings: ["aggregateSettings", "createManySettings", "createOneSettings", "deleteManySettings", "deleteOneSettings", "findFirstSettings", "findFirstSettingsOrThrow", "findManySettings", "findUniqueSettings", "findUniqueSettingsOrThrow", "groupBySettings", "updateManySettings", "updateOneSettings", "upsertOneSettings"]
};
const argsInfo = {
    AggregateApitokenArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyApitokenArgs: ["data", "skipDuplicates"],
    CreateOneApitokenArgs: ["data"],
    DeleteManyApitokenArgs: ["where"],
    DeleteOneApitokenArgs: ["where"],
    FindFirstApitokenArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstApitokenOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyApitokenArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueApitokenArgs: ["where"],
    FindUniqueApitokenOrThrowArgs: ["where"],
    GroupByApitokenArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyApitokenArgs: ["data", "where"],
    UpdateOneApitokenArgs: ["data", "where"],
    UpsertOneApitokenArgs: ["where", "create", "update"],
    AggregatePaymentsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyPaymentsArgs: ["data", "skipDuplicates"],
    CreateOnePaymentsArgs: ["data"],
    DeleteManyPaymentsArgs: ["where"],
    DeleteOnePaymentsArgs: ["where"],
    FindFirstPaymentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstPaymentsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPaymentsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniquePaymentsArgs: ["where"],
    FindUniquePaymentsOrThrowArgs: ["where"],
    GroupByPaymentsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyPaymentsArgs: ["data", "where"],
    UpdateOnePaymentsArgs: ["data", "where"],
    UpsertOnePaymentsArgs: ["where", "create", "update"],
    AggregateTemplatesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyTemplatesArgs: ["data", "skipDuplicates"],
    CreateOneTemplatesArgs: ["data"],
    DeleteManyTemplatesArgs: ["where"],
    DeleteOneTemplatesArgs: ["where"],
    FindFirstTemplatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstTemplatesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyTemplatesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueTemplatesArgs: ["where"],
    FindUniqueTemplatesOrThrowArgs: ["where"],
    GroupByTemplatesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyTemplatesArgs: ["data", "where"],
    UpdateOneTemplatesArgs: ["data", "where"],
    UpsertOneTemplatesArgs: ["where", "create", "update"],
    AggregateEmailsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyEmailsArgs: ["data", "skipDuplicates"],
    CreateOneEmailsArgs: ["data"],
    DeleteManyEmailsArgs: ["where"],
    DeleteOneEmailsArgs: ["where"],
    FindFirstEmailsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstEmailsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyEmailsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueEmailsArgs: ["where"],
    FindUniqueEmailsOrThrowArgs: ["where"],
    GroupByEmailsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyEmailsArgs: ["data", "where"],
    UpdateOneEmailsArgs: ["data", "where"],
    UpsertOneEmailsArgs: ["where", "create", "update"],
    AggregateTaxesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyTaxesArgs: ["data", "skipDuplicates"],
    CreateOneTaxesArgs: ["data"],
    DeleteManyTaxesArgs: ["where"],
    DeleteOneTaxesArgs: ["where"],
    FindFirstTaxesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstTaxesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyTaxesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueTaxesArgs: ["where"],
    FindUniqueTaxesOrThrowArgs: ["where"],
    GroupByTaxesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyTaxesArgs: ["data", "where"],
    UpdateOneTaxesArgs: ["data", "where"],
    UpsertOneTaxesArgs: ["where", "create", "update"],
    AggregateCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyCategoriesArgs: ["data", "skipDuplicates"],
    CreateOneCategoriesArgs: ["data"],
    DeleteManyCategoriesArgs: ["where"],
    DeleteOneCategoriesArgs: ["where"],
    FindFirstCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstCategoriesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyCategoriesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueCategoriesArgs: ["where"],
    FindUniqueCategoriesOrThrowArgs: ["where"],
    GroupByCategoriesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyCategoriesArgs: ["data", "where"],
    UpdateOneCategoriesArgs: ["data", "where"],
    UpsertOneCategoriesArgs: ["where", "create", "update"],
    AggregateCustomersArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyCustomersArgs: ["data", "skipDuplicates"],
    CreateOneCustomersArgs: ["data"],
    DeleteManyCustomersArgs: ["where"],
    DeleteOneCustomersArgs: ["where"],
    FindFirstCustomersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstCustomersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyCustomersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueCustomersArgs: ["where"],
    FindUniqueCustomersOrThrowArgs: ["where"],
    GroupByCustomersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyCustomersArgs: ["data", "where"],
    UpdateOneCustomersArgs: ["data", "where"],
    UpsertOneCustomersArgs: ["where", "create", "update"],
    AggregateIntegrationsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyIntegrationsArgs: ["data", "skipDuplicates"],
    CreateOneIntegrationsArgs: ["data"],
    DeleteManyIntegrationsArgs: ["where"],
    DeleteOneIntegrationsArgs: ["where"],
    FindFirstIntegrationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstIntegrationsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyIntegrationsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueIntegrationsArgs: ["where"],
    FindUniqueIntegrationsOrThrowArgs: ["where"],
    GroupByIntegrationsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyIntegrationsArgs: ["data", "where"],
    UpdateOneIntegrationsArgs: ["data", "where"],
    UpsertOneIntegrationsArgs: ["where", "create", "update"],
    AggregateInternalizationArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyInternalizationArgs: ["data", "skipDuplicates"],
    CreateOneInternalizationArgs: ["data"],
    DeleteManyInternalizationArgs: ["where"],
    DeleteOneInternalizationArgs: ["where"],
    FindFirstInternalizationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstInternalizationOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyInternalizationArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueInternalizationArgs: ["where"],
    FindUniqueInternalizationOrThrowArgs: ["where"],
    GroupByInternalizationArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyInternalizationArgs: ["data", "where"],
    UpdateOneInternalizationArgs: ["data", "where"],
    UpsertOneInternalizationArgs: ["where", "create", "update"],
    AggregateMediamanagerArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyMediamanagerArgs: ["data", "skipDuplicates"],
    CreateOneMediamanagerArgs: ["data"],
    DeleteManyMediamanagerArgs: ["where"],
    DeleteOneMediamanagerArgs: ["where"],
    FindFirstMediamanagerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstMediamanagerOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyMediamanagerArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueMediamanagerArgs: ["where"],
    FindUniqueMediamanagerOrThrowArgs: ["where"],
    GroupByMediamanagerArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyMediamanagerArgs: ["data", "where"],
    UpdateOneMediamanagerArgs: ["data", "where"],
    UpsertOneMediamanagerArgs: ["where", "create", "update"],
    AggregatePermissionsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyPermissionsArgs: ["data", "skipDuplicates"],
    CreateOnePermissionsArgs: ["data"],
    DeleteManyPermissionsArgs: ["where"],
    DeleteOnePermissionsArgs: ["where"],
    FindFirstPermissionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstPermissionsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPermissionsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniquePermissionsArgs: ["where"],
    FindUniquePermissionsOrThrowArgs: ["where"],
    GroupByPermissionsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyPermissionsArgs: ["data", "where"],
    UpdateOnePermissionsArgs: ["data", "where"],
    UpsertOnePermissionsArgs: ["where", "create", "update"],
    AggregatePluginsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyPluginsArgs: ["data", "skipDuplicates"],
    CreateOnePluginsArgs: ["data"],
    DeleteManyPluginsArgs: ["where"],
    DeleteOnePluginsArgs: ["where"],
    FindFirstPluginsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstPluginsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyPluginsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniquePluginsArgs: ["where"],
    FindUniquePluginsOrThrowArgs: ["where"],
    GroupByPluginsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyPluginsArgs: ["data", "where"],
    UpdateOnePluginsArgs: ["data", "where"],
    UpsertOnePluginsArgs: ["where", "create", "update"],
    AggregateProvidersArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyProvidersArgs: ["data", "skipDuplicates"],
    CreateOneProvidersArgs: ["data"],
    DeleteManyProvidersArgs: ["where"],
    DeleteOneProvidersArgs: ["where"],
    FindFirstProvidersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstProvidersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyProvidersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueProvidersArgs: ["where"],
    FindUniqueProvidersOrThrowArgs: ["where"],
    GroupByProvidersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyProvidersArgs: ["data", "where"],
    UpdateOneProvidersArgs: ["data", "where"],
    UpsertOneProvidersArgs: ["where", "create", "update"],
    AggregateRolesArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyRolesArgs: ["data", "skipDuplicates"],
    CreateOneRolesArgs: ["data"],
    DeleteManyRolesArgs: ["where"],
    DeleteOneRolesArgs: ["where"],
    FindFirstRolesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstRolesOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyRolesArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueRolesArgs: ["where"],
    FindUniqueRolesOrThrowArgs: ["where"],
    GroupByRolesArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyRolesArgs: ["data", "where"],
    UpdateOneRolesArgs: ["data", "where"],
    UpsertOneRolesArgs: ["where", "create", "update"],
    AggregateTagsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyTagsArgs: ["data", "skipDuplicates"],
    CreateOneTagsArgs: ["data"],
    DeleteManyTagsArgs: ["where"],
    DeleteOneTagsArgs: ["where"],
    FindFirstTagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstTagsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyTagsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueTagsArgs: ["where"],
    FindUniqueTagsOrThrowArgs: ["where"],
    GroupByTagsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyTagsArgs: ["data", "where"],
    UpdateOneTagsArgs: ["data", "where"],
    UpsertOneTagsArgs: ["where", "create", "update"],
    AggregateUsersArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyUsersArgs: ["data", "skipDuplicates"],
    CreateOneUsersArgs: ["data"],
    DeleteManyUsersArgs: ["where"],
    DeleteOneUsersArgs: ["where"],
    FindFirstUsersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstUsersOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyUsersArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueUsersArgs: ["where"],
    FindUniqueUsersOrThrowArgs: ["where"],
    GroupByUsersArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyUsersArgs: ["data", "where"],
    UpdateOneUsersArgs: ["data", "where"],
    UpsertOneUsersArgs: ["where", "create", "update"],
    AggregateWebhooksArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManyWebhooksArgs: ["data", "skipDuplicates"],
    CreateOneWebhooksArgs: ["data"],
    DeleteManyWebhooksArgs: ["where"],
    DeleteOneWebhooksArgs: ["where"],
    FindFirstWebhooksArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstWebhooksOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManyWebhooksArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueWebhooksArgs: ["where"],
    FindUniqueWebhooksOrThrowArgs: ["where"],
    GroupByWebhooksArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManyWebhooksArgs: ["data", "where"],
    UpdateOneWebhooksArgs: ["data", "where"],
    UpsertOneWebhooksArgs: ["where", "create", "update"],
    AggregateSettingsArgs: ["where", "orderBy", "cursor", "take", "skip"],
    CreateManySettingsArgs: ["data", "skipDuplicates"],
    CreateOneSettingsArgs: ["data"],
    DeleteManySettingsArgs: ["where"],
    DeleteOneSettingsArgs: ["where"],
    FindFirstSettingsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindFirstSettingsOrThrowArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindManySettingsArgs: ["where", "orderBy", "cursor", "take", "skip", "distinct"],
    FindUniqueSettingsArgs: ["where"],
    FindUniqueSettingsOrThrowArgs: ["where"],
    GroupBySettingsArgs: ["where", "orderBy", "by", "having", "take", "skip"],
    UpdateManySettingsArgs: ["data", "where"],
    UpdateOneSettingsArgs: ["data", "where"],
    UpsertOneSettingsArgs: ["where", "create", "update"]
};
function applyResolversEnhanceMap(resolversEnhanceMap) {
    for (const resolversEnhanceMapKey of Object.keys(resolversEnhanceMap)) {
        const modelName = resolversEnhanceMapKey;
        const crudTarget = crudResolversMap[modelName].prototype;
        const resolverActionsConfig = resolversEnhanceMap[modelName];
        const actionResolversConfig = actionResolversMap[modelName];
        if (resolverActionsConfig._all) {
            const allActionsDecorators = resolverActionsConfig._all;
            const resolverActionNames = crudResolversInfo[modelName];
            for (const resolverActionName of resolverActionNames) {
                const actionTarget = actionResolversConfig[resolverActionName].prototype;
                tslib.__decorate(allActionsDecorators, crudTarget, resolverActionName, null);
                tslib.__decorate(allActionsDecorators, actionTarget, resolverActionName, null);
            }
        }
        const resolverActionsToApply = Object.keys(resolverActionsConfig).filter(it => it !== "_all");
        for (const resolverActionName of resolverActionsToApply) {
            const decorators = resolverActionsConfig[resolverActionName];
            const actionTarget = actionResolversConfig[resolverActionName].prototype;
            tslib.__decorate(decorators, crudTarget, resolverActionName, null);
            tslib.__decorate(decorators, actionTarget, resolverActionName, null);
        }
    }
}
exports.applyResolversEnhanceMap = applyResolversEnhanceMap;
function applyArgsTypesEnhanceMap(argsTypesEnhanceMap) {
    for (const argsTypesEnhanceMapKey of Object.keys(argsTypesEnhanceMap)) {
        const argsTypeName = argsTypesEnhanceMapKey;
        const typeConfig = argsTypesEnhanceMap[argsTypeName];
        const typeClass = argsTypes[argsTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, argsInfo[argsTypeName]);
    }
}
exports.applyArgsTypesEnhanceMap = applyArgsTypesEnhanceMap;
function applyTypeClassEnhanceConfig(enhanceConfig, typeClass, typePrototype, typeFieldNames) {
    if (enhanceConfig.class) {
        tslib.__decorate(enhanceConfig.class, typeClass);
    }
    if (enhanceConfig.fields) {
        if (enhanceConfig.fields._all) {
            const allFieldsDecorators = enhanceConfig.fields._all;
            for (const typeFieldName of typeFieldNames) {
                tslib.__decorate(allFieldsDecorators, typePrototype, typeFieldName, void 0);
            }
        }
        const configFieldsToApply = Object.keys(enhanceConfig.fields).filter(it => it !== "_all");
        for (const typeFieldName of configFieldsToApply) {
            const fieldDecorators = enhanceConfig.fields[typeFieldName];
            tslib.__decorate(fieldDecorators, typePrototype, typeFieldName, void 0);
        }
    }
}
const modelsInfo = {
    Apitoken: ["id", "created_at", "name", "token_type", "description", "token"],
    Payments: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    Templates: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    Emails: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    Taxes: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    Categories: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    Customers: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    Integrations: ["id", "created_at", "name", "content", "media", "location", "category"],
    Internalization: ["id", "created_at", "name", "region", "description", "default", "website"],
    Mediamanager: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    Permissions: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    Plugins: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    Providers: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    Roles: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    Tags: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    Users: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    Webhooks: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    Settings: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"]
};
function applyModelsEnhanceMap(modelsEnhanceMap) {
    for (const modelsEnhanceMapKey of Object.keys(modelsEnhanceMap)) {
        const modelName = modelsEnhanceMapKey;
        const modelConfig = modelsEnhanceMap[modelName];
        const modelClass = models[modelName];
        const modelTarget = modelClass.prototype;
        applyTypeClassEnhanceConfig(modelConfig, modelClass, modelTarget, modelsInfo[modelName]);
    }
}
exports.applyModelsEnhanceMap = applyModelsEnhanceMap;
const outputsInfo = {
    AggregateApitoken: ["_count", "_avg", "_sum", "_min", "_max"],
    ApitokenGroupBy: ["id", "created_at", "name", "token_type", "description", "token", "_count", "_avg", "_sum", "_min", "_max"],
    AggregatePayments: ["_count", "_avg", "_sum", "_min", "_max"],
    PaymentsGroupBy: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateTemplates: ["_count", "_avg", "_sum", "_min", "_max"],
    TemplatesGroupBy: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateEmails: ["_count", "_avg", "_sum", "_min", "_max"],
    EmailsGroupBy: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateTaxes: ["_count", "_avg", "_sum", "_min", "_max"],
    TaxesGroupBy: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateCategories: ["_count", "_avg", "_sum", "_min", "_max"],
    CategoriesGroupBy: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateCustomers: ["_count", "_avg", "_sum", "_min", "_max"],
    CustomersGroupBy: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateIntegrations: ["_count", "_avg", "_sum", "_min", "_max"],
    IntegrationsGroupBy: ["id", "created_at", "name", "content", "media", "location", "category", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateInternalization: ["_count", "_avg", "_sum", "_min", "_max"],
    InternalizationGroupBy: ["id", "created_at", "name", "region", "description", "default", "website", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateMediamanager: ["_count", "_avg", "_sum", "_min", "_max"],
    MediamanagerGroupBy: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users", "_count", "_avg", "_sum", "_min", "_max"],
    AggregatePermissions: ["_count", "_avg", "_sum", "_min", "_max"],
    PermissionsGroupBy: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users", "_count", "_avg", "_sum", "_min", "_max"],
    AggregatePlugins: ["_count", "_avg", "_sum", "_min", "_max"],
    PluginsGroupBy: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateProviders: ["_count", "_avg", "_sum", "_min", "_max"],
    ProvidersGroupBy: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateRoles: ["_count", "_avg", "_sum", "_min", "_max"],
    RolesGroupBy: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateTags: ["_count", "_avg", "_sum", "_min", "_max"],
    TagsGroupBy: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateUsers: ["_count", "_avg", "_sum", "_min", "_max"],
    UsersGroupBy: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateWebhooks: ["_count", "_avg", "_sum", "_min", "_max"],
    WebhooksGroupBy: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish", "_count", "_avg", "_sum", "_min", "_max"],
    AggregateSettings: ["_count", "_avg", "_sum", "_min", "_max"],
    SettingsGroupBy: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline", "_count", "_avg", "_sum", "_min", "_max"],
    AffectedRowsOutput: ["count"],
    ApitokenCountAggregate: ["id", "created_at", "name", "token_type", "description", "token", "_all"],
    ApitokenAvgAggregate: ["id", "token"],
    ApitokenSumAggregate: ["id", "token"],
    ApitokenMinAggregate: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenMaxAggregate: ["id", "created_at", "name", "token_type", "description", "token"],
    PaymentsCountAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country", "_all"],
    PaymentsAvgAggregate: ["id"],
    PaymentsSumAggregate: ["id"],
    PaymentsMinAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsMaxAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    TemplatesCountAggregate: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer", "_all"],
    TemplatesAvgAggregate: ["id"],
    TemplatesSumAggregate: ["id"],
    TemplatesMinAggregate: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesMaxAggregate: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    EmailsCountAggregate: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users", "_all"],
    EmailsAvgAggregate: ["id", "cust_id", "staff_id"],
    EmailsSumAggregate: ["id", "cust_id", "staff_id"],
    EmailsMinAggregate: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsMaxAggregate: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    TaxesCountAggregate: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory", "_all"],
    TaxesAvgAggregate: ["id"],
    TaxesSumAggregate: ["id"],
    TaxesMinAggregate: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesMaxAggregate: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    CategoriesCountAggregate: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces", "_all"],
    CategoriesAvgAggregate: ["id"],
    CategoriesSumAggregate: ["id"],
    CategoriesMinAggregate: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesMaxAggregate: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CustomersCountAggregate: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces", "_all"],
    CustomersAvgAggregate: ["id"],
    CustomersSumAggregate: ["id"],
    CustomersMinAggregate: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersMaxAggregate: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    IntegrationsCountAggregate: ["id", "created_at", "name", "content", "media", "location", "category", "_all"],
    IntegrationsAvgAggregate: ["id"],
    IntegrationsSumAggregate: ["id"],
    IntegrationsMinAggregate: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsMaxAggregate: ["id", "created_at", "name", "content", "media", "location", "category"],
    InternalizationCountAggregate: ["id", "created_at", "name", "region", "description", "default", "website", "_all"],
    InternalizationAvgAggregate: ["id"],
    InternalizationSumAggregate: ["id"],
    InternalizationMinAggregate: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationMaxAggregate: ["id", "created_at", "name", "region", "description", "default", "website"],
    MediamanagerCountAggregate: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users", "_all"],
    MediamanagerAvgAggregate: ["id"],
    MediamanagerSumAggregate: ["id"],
    MediamanagerMinAggregate: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerMaxAggregate: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    PermissionsCountAggregate: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users", "_all"],
    PermissionsAvgAggregate: ["id"],
    PermissionsSumAggregate: ["id"],
    PermissionsMinAggregate: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsMaxAggregate: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PluginsCountAggregate: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email", "_all"],
    PluginsAvgAggregate: ["id"],
    PluginsSumAggregate: ["id"],
    PluginsMinAggregate: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsMaxAggregate: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    ProvidersCountAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "_all"],
    ProvidersAvgAggregate: ["id"],
    ProvidersSumAggregate: ["id"],
    ProvidersMinAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersMaxAggregate: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    RolesCountAggregate: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role", "_all"],
    RolesAvgAggregate: ["id"],
    RolesSumAggregate: ["id"],
    RolesMinAggregate: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesMaxAggregate: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    TagsCountAggregate: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users", "_all"],
    TagsAvgAggregate: ["id"],
    TagsSumAggregate: ["id"],
    TagsMinAggregate: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsMaxAggregate: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    UsersCountAggregate: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager", "_all"],
    UsersAvgAggregate: ["id"],
    UsersSumAggregate: ["id"],
    UsersMinAggregate: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersMaxAggregate: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    WebhooksCountAggregate: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish", "_all"],
    WebhooksAvgAggregate: ["id"],
    WebhooksSumAggregate: ["id"],
    WebhooksMinAggregate: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksMaxAggregate: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    SettingsCountAggregate: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline", "_all"],
    SettingsAvgAggregate: ["id"],
    SettingsSumAggregate: ["id"],
    SettingsMinAggregate: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsMaxAggregate: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"]
};
function applyOutputTypesEnhanceMap(outputTypesEnhanceMap) {
    for (const outputTypeEnhanceMapKey of Object.keys(outputTypesEnhanceMap)) {
        const outputTypeName = outputTypeEnhanceMapKey;
        const typeConfig = outputTypesEnhanceMap[outputTypeName];
        const typeClass = outputTypes[outputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, outputsInfo[outputTypeName]);
    }
}
exports.applyOutputTypesEnhanceMap = applyOutputTypesEnhanceMap;
const inputsInfo = {
    ApitokenWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "token_type", "description", "token"],
    ApitokenOrderByWithRelationInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenWhereUniqueInput: ["id", "name", "token"],
    ApitokenOrderByWithAggregationInput: ["id", "created_at", "name", "token_type", "description", "token", "_count", "_avg", "_max", "_min", "_sum"],
    ApitokenScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "token_type", "description", "token"],
    PaymentsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsOrderByWithRelationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsWhereUniqueInput: ["id", "name"],
    PaymentsOrderByWithAggregationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country", "_count", "_avg", "_max", "_min", "_sum"],
    PaymentsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    TemplatesWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesOrderByWithRelationInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesWhereUniqueInput: ["id"],
    TemplatesOrderByWithAggregationInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer", "_count", "_avg", "_max", "_min", "_sum"],
    TemplatesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    EmailsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsOrderByWithRelationInput: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsWhereUniqueInput: ["id"],
    EmailsOrderByWithAggregationInput: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users", "_count", "_avg", "_max", "_min", "_sum"],
    EmailsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    TaxesWhereInput: ["AND", "OR", "NOT", "id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesOrderByWithRelationInput: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesWhereUniqueInput: ["id"],
    TaxesOrderByWithAggregationInput: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory", "_count", "_avg", "_max", "_min", "_sum"],
    TaxesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    CategoriesWhereInput: ["AND", "OR", "NOT", "id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesOrderByWithRelationInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesWhereUniqueInput: ["id"],
    CategoriesOrderByWithAggregationInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces", "_count", "_avg", "_max", "_min", "_sum"],
    CategoriesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CustomersWhereInput: ["AND", "OR", "NOT", "id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersOrderByWithRelationInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersWhereUniqueInput: ["id"],
    CustomersOrderByWithAggregationInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces", "_count", "_avg", "_max", "_min", "_sum"],
    CustomersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    IntegrationsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsOrderByWithRelationInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsWhereUniqueInput: ["id"],
    IntegrationsOrderByWithAggregationInput: ["id", "created_at", "name", "content", "media", "location", "category", "_count", "_avg", "_max", "_min", "_sum"],
    IntegrationsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "media", "location", "category"],
    InternalizationWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationOrderByWithRelationInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationWhereUniqueInput: ["id"],
    InternalizationOrderByWithAggregationInput: ["id", "created_at", "name", "region", "description", "default", "website", "_count", "_avg", "_max", "_min", "_sum"],
    InternalizationScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "region", "description", "default", "website"],
    MediamanagerWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerOrderByWithRelationInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerWhereUniqueInput: ["id"],
    MediamanagerOrderByWithAggregationInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users", "_count", "_avg", "_max", "_min", "_sum"],
    MediamanagerScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    PermissionsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsOrderByWithRelationInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsWhereUniqueInput: ["id"],
    PermissionsOrderByWithAggregationInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users", "_count", "_avg", "_max", "_min", "_sum"],
    PermissionsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PluginsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsOrderByWithRelationInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsWhereUniqueInput: ["id"],
    PluginsOrderByWithAggregationInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email", "_count", "_avg", "_max", "_min", "_sum"],
    PluginsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    ProvidersWhereInput: ["AND", "OR", "NOT", "id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersOrderByWithRelationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersWhereUniqueInput: ["id", "name"],
    ProvidersOrderByWithAggregationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "_count", "_avg", "_max", "_min", "_sum"],
    ProvidersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    RolesWhereInput: ["AND", "OR", "NOT", "id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesOrderByWithRelationInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesWhereUniqueInput: ["id"],
    RolesOrderByWithAggregationInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role", "_count", "_avg", "_max", "_min", "_sum"],
    RolesScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    TagsWhereInput: ["AND", "OR", "NOT", "id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsOrderByWithRelationInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsWhereUniqueInput: ["id"],
    TagsOrderByWithAggregationInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users", "_count", "_avg", "_max", "_min", "_sum"],
    TagsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    UsersWhereInput: ["AND", "OR", "NOT", "id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersOrderByWithRelationInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersWhereUniqueInput: ["id"],
    UsersOrderByWithAggregationInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager", "_count", "_avg", "_max", "_min", "_sum"],
    UsersScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    WebhooksWhereInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksOrderByWithRelationInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksWhereUniqueInput: ["id"],
    WebhooksOrderByWithAggregationInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish", "_count", "_avg", "_max", "_min", "_sum"],
    WebhooksScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    SettingsWhereInput: ["AND", "OR", "NOT", "id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsOrderByWithRelationInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsWhereUniqueInput: ["id"],
    SettingsOrderByWithAggregationInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline", "_count", "_avg", "_max", "_min", "_sum"],
    SettingsScalarWhereWithAggregatesInput: ["AND", "OR", "NOT", "id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    ApitokenCreateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenUpdateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenCreateManyInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenUpdateManyMutationInput: ["id", "created_at", "name", "token_type", "description", "token"],
    PaymentsCreateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsUpdateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsCreateManyInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsUpdateManyMutationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    TemplatesCreateInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesUpdateInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesCreateManyInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesUpdateManyMutationInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    EmailsCreateInput: ["created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsUpdateInput: ["created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsCreateManyInput: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsUpdateManyMutationInput: ["created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    TaxesCreateInput: ["tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesUpdateInput: ["tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesCreateManyInput: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesUpdateManyMutationInput: ["tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    CategoriesCreateInput: ["thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesUpdateInput: ["thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesCreateManyInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesUpdateManyMutationInput: ["thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CustomersCreateInput: ["thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersUpdateInput: ["thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersCreateManyInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersUpdateManyMutationInput: ["thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    IntegrationsCreateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsUpdateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsCreateManyInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsUpdateManyMutationInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    InternalizationCreateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationUpdateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationCreateManyInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationUpdateManyMutationInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    MediamanagerCreateInput: ["created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerUpdateInput: ["created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerCreateManyInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerUpdateManyMutationInput: ["created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    PermissionsCreateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsUpdateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsCreateManyInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsUpdateManyMutationInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PluginsCreateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsUpdateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsCreateManyInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsUpdateManyMutationInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    ProvidersCreateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersUpdateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersCreateManyInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersUpdateManyMutationInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    RolesCreateInput: ["role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesUpdateInput: ["role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesCreateManyInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesUpdateManyMutationInput: ["role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    TagsCreateInput: ["name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsUpdateInput: ["name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsCreateManyInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsUpdateManyMutationInput: ["name", "excerpt", "categories", "articles", "products", "customers", "users"],
    UsersCreateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersUpdateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersCreateManyInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersUpdateManyMutationInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    WebhooksCreateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksUpdateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksCreateManyInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksUpdateManyMutationInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    SettingsCreateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsUpdateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsCreateManyInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsUpdateManyMutationInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    BigIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    DateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    StringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
    StringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not"],
    ApitokenCountOrderByAggregateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenAvgOrderByAggregateInput: ["id", "token"],
    ApitokenMaxOrderByAggregateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenMinOrderByAggregateInput: ["id", "created_at", "name", "token_type", "description", "token"],
    ApitokenSumOrderByAggregateInput: ["id", "token"],
    BigIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    DateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    StringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
    StringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "mode", "not", "_count", "_min", "_max"],
    PaymentsCountOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsAvgOrderByAggregateInput: ["id"],
    PaymentsMaxOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsMinOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active", "country"],
    PaymentsSumOrderByAggregateInput: ["id"],
    TemplatesCountOrderByAggregateInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesAvgOrderByAggregateInput: ["id"],
    TemplatesMaxOrderByAggregateInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesMinOrderByAggregateInput: ["id", "created_at", "name", "assigned_to", "type", "active", "page_size", "orientation", "content", "header", "footer", "margin_left", "margin_right", "margin_top", "margin_bottom", "margin_header", "margin_footer"],
    TemplatesSumOrderByAggregateInput: ["id"],
    IntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    IntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    EmailsCountOrderByAggregateInput: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsAvgOrderByAggregateInput: ["id", "cust_id", "staff_id"],
    EmailsMaxOrderByAggregateInput: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsMinOrderByAggregateInput: ["id", "created_at", "subject", "content", "cust_id", "bcc", "cc", "from", "media", "staff_id", "customers", "users"],
    EmailsSumOrderByAggregateInput: ["id", "cust_id", "staff_id"],
    IntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    IntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    TaxesCountOrderByAggregateInput: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesAvgOrderByAggregateInput: ["id"],
    TaxesMaxOrderByAggregateInput: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesMinOrderByAggregateInput: ["id", "tax_identifier", "postcode", "state", "country", "rate_percent", "taxDefault", "products", "taxRuleName", "taxCategory"],
    TaxesSumOrderByAggregateInput: ["id"],
    BoolNullableFilter: ["equals", "not"],
    CategoriesCountOrderByAggregateInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesAvgOrderByAggregateInput: ["id"],
    CategoriesMaxOrderByAggregateInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesMinOrderByAggregateInput: ["id", "thumbnail", "name", "visibility", "status", "websites", "product", "country", "description", "content", "image", "meta_title", "meta_keywords", "meta_description", "meta_url", "workspaces"],
    CategoriesSumOrderByAggregateInput: ["id"],
    BoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"],
    CustomersCountOrderByAggregateInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersAvgOrderByAggregateInput: ["id"],
    CustomersMaxOrderByAggregateInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersMinOrderByAggregateInput: ["id", "thumbnail", "name_prefix", "first_name", "middle_name", "last_name", "email", "customer_group", "phone", "zipcode", "name_suffix", "websites", "product", "country", "state", "customer_since", "confirmed_email", "date_of_birth", "tax_vat_number", "gender", "description", "short_description", "image", "Address", "address_two", "payment_type", "username", "password", "comments", "credit_memos", "customer_payment", "emails", "mediamanager", "messages", "newsletter_subscribers", "orders", "projects", "quotes", "returns", "workspaces"],
    CustomersSumOrderByAggregateInput: ["id"],
    IntegrationsCountOrderByAggregateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsAvgOrderByAggregateInput: ["id"],
    IntegrationsMaxOrderByAggregateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsMinOrderByAggregateInput: ["id", "created_at", "name", "content", "media", "location", "category"],
    IntegrationsSumOrderByAggregateInput: ["id"],
    InternalizationCountOrderByAggregateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationAvgOrderByAggregateInput: ["id"],
    InternalizationMaxOrderByAggregateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationMinOrderByAggregateInput: ["id", "created_at", "name", "region", "description", "default", "website"],
    InternalizationSumOrderByAggregateInput: ["id"],
    MediamanagerCountOrderByAggregateInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerAvgOrderByAggregateInput: ["id"],
    MediamanagerMaxOrderByAggregateInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerMinOrderByAggregateInput: ["id", "created_at", "name", "description", "media", "keywords", "tags", "brands", "status", "expiration_date", "copyright", "dimensions", "author", "content_type", "versions", "watermark_name", "watermark_description", "watermark_media", "agreements", "albums", "comment", "workspace", "task_name", "task_description", "task_type", "members", "products", "agreements_agreementsTomediamanager", "brands_brandsTomediamanager", "comments", "customers", "products_mediamanagerToproducts", "tasks", "users"],
    MediamanagerSumOrderByAggregateInput: ["id"],
    PermissionsCountOrderByAggregateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsAvgOrderByAggregateInput: ["id"],
    PermissionsMaxOrderByAggregateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsMinOrderByAggregateInput: ["id", "created_at", "name", "content", "create", "delete", "read", "role", "update", "users"],
    PermissionsSumOrderByAggregateInput: ["id"],
    PluginsCountOrderByAggregateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsAvgOrderByAggregateInput: ["id"],
    PluginsMaxOrderByAggregateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsMinOrderByAggregateInput: ["id", "created_at", "name", "url", "github_link", "description", "logo", "screenshots", "last_updated", "publisher_name", "agree_terms", "publisher_email"],
    PluginsSumOrderByAggregateInput: ["id"],
    ProvidersCountOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersAvgOrderByAggregateInput: ["id"],
    ProvidersMaxOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersMinOrderByAggregateInput: ["id", "created_at", "client_id", "client_secret", "host_uri", "redirect_url", "redirect_url_app", "icon", "name", "active"],
    ProvidersSumOrderByAggregateInput: ["id"],
    RolesCountOrderByAggregateInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesAvgOrderByAggregateInput: ["id"],
    RolesMaxOrderByAggregateInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesMinOrderByAggregateInput: ["id", "role_name", "content", "created_at", "type", "createRole", "updateRole", "deleteRole", "publishRole", "unpublishRole", "role"],
    RolesSumOrderByAggregateInput: ["id"],
    TagsCountOrderByAggregateInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsAvgOrderByAggregateInput: ["id"],
    TagsMaxOrderByAggregateInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsMinOrderByAggregateInput: ["id", "name", "excerpt", "categories", "articles", "products", "customers", "users"],
    TagsSumOrderByAggregateInput: ["id"],
    UsersCountOrderByAggregateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersAvgOrderByAggregateInput: ["id"],
    UsersMaxOrderByAggregateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersMinOrderByAggregateInput: ["id", "username", "first_name", "last_name", "email", "password", "phone", "permissions", "created_at", "mediamanager"],
    UsersSumOrderByAggregateInput: ["id"],
    WebhooksCountOrderByAggregateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksAvgOrderByAggregateInput: ["id"],
    WebhooksMaxOrderByAggregateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksMinOrderByAggregateInput: ["id", "created_at", "name", "url", "headers", "create", "retrieve", "update", "delete", "publish", "unpublish"],
    WebhooksSumOrderByAggregateInput: ["id"],
    SettingsCountOrderByAggregateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsAvgOrderByAggregateInput: ["id"],
    SettingsMaxOrderByAggregateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsMinOrderByAggregateInput: ["id", "created_at", "store_name", "store_phone", "store_hours", "country", "region", "zipcode", "city", "address", "address_two", "vat_number", "allow_state", "state_required_for", "allow_countries", "default_country", "optional_zip", "european_union_countries", "top_destinations", "base_currency", "default_currency", "allowed_currency", "siteName", "siteWebsite", "sentryDsn", "awsS3", "databaseUrl", "isPublic", "type", "googleAnalytics", "searchSetting", "mailServer", "siteTagline"],
    SettingsSumOrderByAggregateInput: ["id"],
    BigIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    NullableDateTimeFieldUpdateOperationsInput: ["set"],
    StringFieldUpdateOperationsInput: ["set"],
    NullableStringFieldUpdateOperationsInput: ["set"],
    IntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    NullableIntFieldUpdateOperationsInput: ["set", "increment", "decrement", "multiply", "divide"],
    NullableBoolFieldUpdateOperationsInput: ["set"],
    NestedBigIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedDateTimeNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedStringFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
    NestedStringNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not"],
    NestedBigIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedIntFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedFloatFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedDateTimeNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_min", "_max"],
    NestedIntNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedStringWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
    NestedStringNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "contains", "startsWith", "endsWith", "not", "_count", "_min", "_max"],
    NestedIntWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedIntNullableWithAggregatesFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not", "_count", "_avg", "_sum", "_min", "_max"],
    NestedFloatNullableFilter: ["equals", "in", "notIn", "lt", "lte", "gt", "gte", "not"],
    NestedBoolNullableFilter: ["equals", "not"],
    NestedBoolNullableWithAggregatesFilter: ["equals", "not", "_count", "_min", "_max"]
};
function applyInputTypesEnhanceMap(inputTypesEnhanceMap) {
    for (const inputTypeEnhanceMapKey of Object.keys(inputTypesEnhanceMap)) {
        const inputTypeName = inputTypeEnhanceMapKey;
        const typeConfig = inputTypesEnhanceMap[inputTypeName];
        const typeClass = inputTypes[inputTypeName];
        const typeTarget = typeClass.prototype;
        applyTypeClassEnhanceConfig(typeConfig, typeClass, typeTarget, inputsInfo[inputTypeName]);
    }
}
exports.applyInputTypesEnhanceMap = applyInputTypesEnhanceMap;
